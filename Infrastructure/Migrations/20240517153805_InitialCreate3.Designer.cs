// <auto-generated />
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(StoreContextSecond))]
    [Migration("20240517153805_InitialCreate3")]
    partial class InitialCreate3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.5");

            modelBuilder.Entity("Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductBrandId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProductBrandId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Core.Entities.ProductBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ProductBrand");
                });

            modelBuilder.Entity("Core.Entities.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ProductType");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.BatteriesAndAccumItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Brand")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("ShopSubcategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ShopSubcategoryId");

                    b.ToTable("BatteriesAndAccumItems");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.BedroomItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("ShopSubcategoryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ShopSubcategoryId");

                    b.ToTable("BedroomItems");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.DishWasherItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Power")
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("ShopSubcategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Volume")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ShopSubcategoryId");

                    b.ToTable("DishWasherItems");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.FreezerItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Noise")
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("ShopSubcategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Volume")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ShopSubcategoryId");

                    b.ToTable("FreezerItems");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.HallwayItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("ShopSubcategoryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ShopSubcategoryId");

                    b.ToTable("HallwayItems");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.HeadphonesItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Brand")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("ShopSubcategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ShopSubcategoryId");

                    b.ToTable("HeadphonesItems");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.KitchenItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("ShopSubcategoryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ShopSubcategoryId");

                    b.ToTable("KitchenItems");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.MenAccessoriesItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("ShopSubcategoryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ShopSubcategoryId");

                    b.ToTable("MenAccessoriesItems");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.MenClothesItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("ShopSubcategoryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ShopSubcategoryId");

                    b.ToTable("MenClothesItems");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.MenShoesItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("ShopSubcategoryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ShopSubcategoryId");

                    b.ToTable("MenShoesItems");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.MicrowaveItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Power")
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("ShopSubcategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Volume")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ShopSubcategoryId");

                    b.ToTable("MicrowaveItems");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.OfficeItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("ShopSubcategoryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ShopSubcategoryId");

                    b.ToTable("OfficeItems");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.PCAccessory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ShopSubcategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SubSubcategoryName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ShopSubcategoryId");

                    b.ToTable("PCAccessories");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.PCAccessoryCPUItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Brand")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cores")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PCAccessoryId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("PCAccessoryId");

                    b.ToTable("PCAccessoryCPUItems");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.PCAccessoryGPUItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Brand")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PCAccessoryId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PCAccessoryId");

                    b.ToTable("PCAccessoryGPUItems");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.PCAccessoryHDDItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Brand")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PCAccessoryId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PCAccessoryId");

                    b.ToTable("PCAccessoryHDDItems");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.PCAccessoryMotherboardItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Brand")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PCAccessoryId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<string>("Socket")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PCAccessoryId");

                    b.ToTable("PCAccessoryMotherboardItems");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.PCAccessoryRAMItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Brand")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PCAccessoryId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PCAccessoryId");

                    b.ToTable("PCAccessoryRAMItems");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.PCAccessorySSDItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Brand")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PCAccessoryId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PCAccessoryId");

                    b.ToTable("PCAccessorySSDItems");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.PCDisplay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ShopSubcategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SubSubcategoryName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ShopSubcategoryId");

                    b.ToTable("PCDisplays");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.PCDisplayItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Brand")
                        .HasColumnType("TEXT");

                    b.Property<string>("Clock")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PCDisplayId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("PCDisplayId");

                    b.ToTable("PCDisplayItems");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.PCPeriphery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ShopSubcategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SubSubcategoryName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ShopSubcategoryId");

                    b.ToTable("Peripheries");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.PCPeripheryKeyboardItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Linking")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PCPeripheryId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("PCPeripheryId");

                    b.ToTable("PCPeripheryKeyboardItems");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.PCPeripheryMiceItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Linking")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PCPeripheryId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("PCPeripheryId");

                    b.ToTable("PCPeripheryMiceItems");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.PCPeripheryWebCamItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PCPeripheryId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<string>("Resolution")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PCPeripheryId");

                    b.ToTable("PCPeripheryWebCamItems");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.PCPortable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ShopSubcategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SubSubcategoryName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ShopSubcategoryId");

                    b.ToTable("PCPortables");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.PCPortableEbookItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Brand")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PCPortableId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("PCPortableId");

                    b.ToTable("PCPortableEbookItem");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.PCPortableLaptopItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Brand")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PCPortableId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<string>("RAM_Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PCPortableId");

                    b.ToTable("PCPortableLaptopItems");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.PCPortableTabletItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Brand")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PCPortableId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("PCPortableId");

                    b.ToTable("PCPortableTabletItems");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.ShopCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ShopCategoryName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.ShopSubcategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ShopCategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ShopCategoryName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ShopCategoryId");

                    b.ToTable("ShopSubcategories");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.SmartphoneItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Display")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<string>("Resolution")
                        .HasColumnType("TEXT");

                    b.Property<int>("ShopSubcategoryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ShopSubcategoryId");

                    b.ToTable("SmartphoneItems");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.TVItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Display")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<string>("Resolution")
                        .HasColumnType("TEXT");

                    b.Property<int>("ShopSubcategoryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ShopSubcategoryId");

                    b.ToTable("TVItems");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.VacuumCleanerItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Power")
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("ShopSubcategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Volume")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ShopSubcategoryId");

                    b.ToTable("VacuumCleanerItems");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.WasherItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("ShopSubcategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Spin")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ShopSubcategoryId");

                    b.ToTable("WasherItems");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.WomenAccessoriesItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("ShopSubcategoryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ShopSubcategoryId");

                    b.ToTable("WomenAccessoriesItems");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.WomenClothesItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("ShopSubcategoryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ShopSubcategoryId");

                    b.ToTable("WomenClothesItems");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.WomenShoesItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("ShopSubcategoryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ShopSubcategoryId");

                    b.ToTable("WomenShoesItems");
                });

            modelBuilder.Entity("Core.Entities.Product", b =>
                {
                    b.HasOne("Core.Entities.ProductBrand", "ProductBrand")
                        .WithMany()
                        .HasForeignKey("ProductBrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.ProductType", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductBrand");

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.BatteriesAndAccumItem", b =>
                {
                    b.HasOne("Core.Entities.ShopGoods.ShopSubcategory", "ShopSubcategory")
                        .WithMany("BatteriesAndAccumItems")
                        .HasForeignKey("ShopSubcategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShopSubcategory");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.BedroomItem", b =>
                {
                    b.HasOne("Core.Entities.ShopGoods.ShopSubcategory", "ShopSubcategory")
                        .WithMany("BedroomItems")
                        .HasForeignKey("ShopSubcategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShopSubcategory");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.DishWasherItem", b =>
                {
                    b.HasOne("Core.Entities.ShopGoods.ShopSubcategory", "ShopSubcategory")
                        .WithMany("DishWasherItems")
                        .HasForeignKey("ShopSubcategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShopSubcategory");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.FreezerItem", b =>
                {
                    b.HasOne("Core.Entities.ShopGoods.ShopSubcategory", "ShopSubcategory")
                        .WithMany("FreezerItems")
                        .HasForeignKey("ShopSubcategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShopSubcategory");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.HallwayItem", b =>
                {
                    b.HasOne("Core.Entities.ShopGoods.ShopSubcategory", "ShopSubcategory")
                        .WithMany("HallwayItems")
                        .HasForeignKey("ShopSubcategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShopSubcategory");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.HeadphonesItem", b =>
                {
                    b.HasOne("Core.Entities.ShopGoods.ShopSubcategory", "ShopSubcategory")
                        .WithMany("HeadphonesItems")
                        .HasForeignKey("ShopSubcategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShopSubcategory");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.KitchenItem", b =>
                {
                    b.HasOne("Core.Entities.ShopGoods.ShopSubcategory", "ShopSubcategory")
                        .WithMany("KitchenItems")
                        .HasForeignKey("ShopSubcategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShopSubcategory");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.MenAccessoriesItem", b =>
                {
                    b.HasOne("Core.Entities.ShopGoods.ShopSubcategory", "ShopSubcategory")
                        .WithMany("MenAccessoriesItems")
                        .HasForeignKey("ShopSubcategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShopSubcategory");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.MenClothesItem", b =>
                {
                    b.HasOne("Core.Entities.ShopGoods.ShopSubcategory", "ShopSubcategory")
                        .WithMany("MenClothesItems")
                        .HasForeignKey("ShopSubcategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShopSubcategory");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.MenShoesItem", b =>
                {
                    b.HasOne("Core.Entities.ShopGoods.ShopSubcategory", "ShopSubcategory")
                        .WithMany("MenShoesItems")
                        .HasForeignKey("ShopSubcategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShopSubcategory");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.MicrowaveItem", b =>
                {
                    b.HasOne("Core.Entities.ShopGoods.ShopSubcategory", "ShopSubcategory")
                        .WithMany("MicrowaveItems")
                        .HasForeignKey("ShopSubcategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShopSubcategory");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.OfficeItem", b =>
                {
                    b.HasOne("Core.Entities.ShopGoods.ShopSubcategory", "ShopSubcategory")
                        .WithMany("OfficeItems")
                        .HasForeignKey("ShopSubcategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShopSubcategory");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.PCAccessory", b =>
                {
                    b.HasOne("Core.Entities.ShopGoods.ShopSubcategory", "ShopSubcategory")
                        .WithMany("PCAccessories")
                        .HasForeignKey("ShopSubcategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShopSubcategory");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.PCAccessoryCPUItem", b =>
                {
                    b.HasOne("Core.Entities.ShopGoods.PCAccessory", "PCAccessory")
                        .WithMany("PCAccessoryCPUItems")
                        .HasForeignKey("PCAccessoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PCAccessory");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.PCAccessoryGPUItem", b =>
                {
                    b.HasOne("Core.Entities.ShopGoods.PCAccessory", "PCAccessory")
                        .WithMany("PCAccessoryGPUItems")
                        .HasForeignKey("PCAccessoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PCAccessory");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.PCAccessoryHDDItem", b =>
                {
                    b.HasOne("Core.Entities.ShopGoods.PCAccessory", "PCAccessory")
                        .WithMany("PCAccessoryHDDItems")
                        .HasForeignKey("PCAccessoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PCAccessory");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.PCAccessoryMotherboardItem", b =>
                {
                    b.HasOne("Core.Entities.ShopGoods.PCAccessory", "PCAccessory")
                        .WithMany("PCAccessoryMotherboardItems")
                        .HasForeignKey("PCAccessoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PCAccessory");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.PCAccessoryRAMItem", b =>
                {
                    b.HasOne("Core.Entities.ShopGoods.PCAccessory", "PCAccessory")
                        .WithMany("PCAccessoryRAMItems")
                        .HasForeignKey("PCAccessoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PCAccessory");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.PCAccessorySSDItem", b =>
                {
                    b.HasOne("Core.Entities.ShopGoods.PCAccessory", "PCAccessory")
                        .WithMany("PCAccessorySDDItems")
                        .HasForeignKey("PCAccessoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PCAccessory");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.PCDisplay", b =>
                {
                    b.HasOne("Core.Entities.ShopGoods.ShopSubcategory", "ShopSubcategory")
                        .WithMany("PCDisplays")
                        .HasForeignKey("ShopSubcategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShopSubcategory");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.PCDisplayItem", b =>
                {
                    b.HasOne("Core.Entities.ShopGoods.PCDisplay", "PCDisplay")
                        .WithMany("PCDisplayItems")
                        .HasForeignKey("PCDisplayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PCDisplay");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.PCPeriphery", b =>
                {
                    b.HasOne("Core.Entities.ShopGoods.ShopSubcategory", "ShopSubcategory")
                        .WithMany("Peripheries")
                        .HasForeignKey("ShopSubcategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShopSubcategory");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.PCPeripheryKeyboardItem", b =>
                {
                    b.HasOne("Core.Entities.ShopGoods.PCPeriphery", "PCPeriphery")
                        .WithMany("PCPeripheryKeyboardItems")
                        .HasForeignKey("PCPeripheryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PCPeriphery");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.PCPeripheryMiceItem", b =>
                {
                    b.HasOne("Core.Entities.ShopGoods.PCPeriphery", "PCPeriphery")
                        .WithMany("PCPeripheryMiceItems")
                        .HasForeignKey("PCPeripheryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PCPeriphery");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.PCPeripheryWebCamItem", b =>
                {
                    b.HasOne("Core.Entities.ShopGoods.PCPeriphery", "PCPeriphery")
                        .WithMany("PCPeripheryWebCamItems")
                        .HasForeignKey("PCPeripheryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PCPeriphery");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.PCPortable", b =>
                {
                    b.HasOne("Core.Entities.ShopGoods.ShopSubcategory", "ShopSubcategory")
                        .WithMany("PCPortables")
                        .HasForeignKey("ShopSubcategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShopSubcategory");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.PCPortableEbookItem", b =>
                {
                    b.HasOne("Core.Entities.ShopGoods.PCPortable", "PCPortable")
                        .WithMany("PCPortableEbookItem")
                        .HasForeignKey("PCPortableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PCPortable");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.PCPortableLaptopItem", b =>
                {
                    b.HasOne("Core.Entities.ShopGoods.PCPortable", "PCPortable")
                        .WithMany("PCPortableLaptopItems")
                        .HasForeignKey("PCPortableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PCPortable");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.PCPortableTabletItem", b =>
                {
                    b.HasOne("Core.Entities.ShopGoods.PCPortable", "PCPortable")
                        .WithMany("PCPortableTabletItems")
                        .HasForeignKey("PCPortableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PCPortable");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.ShopSubcategory", b =>
                {
                    b.HasOne("Core.Entities.ShopGoods.ShopCategory", "ShopCategory")
                        .WithMany("ShopSubcategories")
                        .HasForeignKey("ShopCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShopCategory");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.SmartphoneItem", b =>
                {
                    b.HasOne("Core.Entities.ShopGoods.ShopSubcategory", "ShopSubcategory")
                        .WithMany("SmartphoneItems")
                        .HasForeignKey("ShopSubcategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShopSubcategory");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.TVItem", b =>
                {
                    b.HasOne("Core.Entities.ShopGoods.ShopSubcategory", "ShopSubcategory")
                        .WithMany("TVItems")
                        .HasForeignKey("ShopSubcategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShopSubcategory");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.VacuumCleanerItem", b =>
                {
                    b.HasOne("Core.Entities.ShopGoods.ShopSubcategory", "ShopSubcategory")
                        .WithMany("VacuumCleanerItems")
                        .HasForeignKey("ShopSubcategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShopSubcategory");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.WasherItem", b =>
                {
                    b.HasOne("Core.Entities.ShopGoods.ShopSubcategory", "ShopSubcategory")
                        .WithMany("WasherItems")
                        .HasForeignKey("ShopSubcategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShopSubcategory");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.WomenAccessoriesItem", b =>
                {
                    b.HasOne("Core.Entities.ShopGoods.ShopSubcategory", "ShopSubcategory")
                        .WithMany("WomenAccessoriesItems")
                        .HasForeignKey("ShopSubcategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShopSubcategory");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.WomenClothesItem", b =>
                {
                    b.HasOne("Core.Entities.ShopGoods.ShopSubcategory", "ShopSubcategory")
                        .WithMany("WomenClothesItems")
                        .HasForeignKey("ShopSubcategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShopSubcategory");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.WomenShoesItem", b =>
                {
                    b.HasOne("Core.Entities.ShopGoods.ShopSubcategory", "ShopSubcategory")
                        .WithMany("WomenShoesItems")
                        .HasForeignKey("ShopSubcategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShopSubcategory");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.PCAccessory", b =>
                {
                    b.Navigation("PCAccessoryCPUItems");

                    b.Navigation("PCAccessoryGPUItems");

                    b.Navigation("PCAccessoryHDDItems");

                    b.Navigation("PCAccessoryMotherboardItems");

                    b.Navigation("PCAccessoryRAMItems");

                    b.Navigation("PCAccessorySDDItems");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.PCDisplay", b =>
                {
                    b.Navigation("PCDisplayItems");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.PCPeriphery", b =>
                {
                    b.Navigation("PCPeripheryKeyboardItems");

                    b.Navigation("PCPeripheryMiceItems");

                    b.Navigation("PCPeripheryWebCamItems");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.PCPortable", b =>
                {
                    b.Navigation("PCPortableEbookItem");

                    b.Navigation("PCPortableLaptopItems");

                    b.Navigation("PCPortableTabletItems");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.ShopCategory", b =>
                {
                    b.Navigation("ShopSubcategories");
                });

            modelBuilder.Entity("Core.Entities.ShopGoods.ShopSubcategory", b =>
                {
                    b.Navigation("BatteriesAndAccumItems");

                    b.Navigation("BedroomItems");

                    b.Navigation("DishWasherItems");

                    b.Navigation("FreezerItems");

                    b.Navigation("HallwayItems");

                    b.Navigation("HeadphonesItems");

                    b.Navigation("KitchenItems");

                    b.Navigation("MenAccessoriesItems");

                    b.Navigation("MenClothesItems");

                    b.Navigation("MenShoesItems");

                    b.Navigation("MicrowaveItems");

                    b.Navigation("OfficeItems");

                    b.Navigation("PCAccessories");

                    b.Navigation("PCDisplays");

                    b.Navigation("PCPortables");

                    b.Navigation("Peripheries");

                    b.Navigation("SmartphoneItems");

                    b.Navigation("TVItems");

                    b.Navigation("VacuumCleanerItems");

                    b.Navigation("WasherItems");

                    b.Navigation("WomenAccessoriesItems");

                    b.Navigation("WomenClothesItems");

                    b.Navigation("WomenShoesItems");
                });
#pragma warning restore 612, 618
        }
    }
}
